#!/usr/bin/env python

import logging
import tempfile
import shutil
import os

from lollipop.agent import Agent
from lollipop.config import Config
from lollipop.multiplex import multiplexer

logging.basicConfig(
    format='%(asctime)-15s [%(name)s:%(lineno)d]: %(msg)s',
    level=logging.INFO,
)
logger = logging.getLogger(__name__)
logger.info('test')


def run():
    import argparse

    parser = argparse.ArgumentParser()
    parser.add_argument('-C', '--config')

    args = parser.parse_args()

    # Load configuration
    if args.config is None:
        for path in Config.DEFAULT_PATH:
            if os.access(path, os.R_OK):
                args.config = path
                break
    if args.config is None:
        return parser.error("Can't find default configuration file")

    config = Config(args.config)
    tempdir = tempfile.mkdtemp(
        prefix=config.get('socket.prefix', 'lollipop-'),
        dir=config.get('socket.dir'),
    )

    try:
        agent = Agent(tempdir, config)
        print('listening on', agent.sockname)
        server = multiplexer()
        server.register(agent.remote)
        server.loop()
    except Exception as error:
        logger.exception('unhandled exception')
    finally:
        shutil.rmtree(tempdir)


if __name__ == '__main__':
    run()
